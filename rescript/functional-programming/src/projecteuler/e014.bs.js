// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");

function is_even(n) {
  return n % 2 === 0;
}

function calculate_next(n) {
  if (is_even(n)) {
    return n / 2 | 0;
  } else {
    return Math.imul(3, n) + 1 | 0;
  }
}

function generate_sequence(start) {
  var _seq = [start];
  var _i = 0;
  while(true) {
    var i = _i;
    var seq = _seq;
    var curr = Belt_Array.getExn(seq, i);
    var next = calculate_next(curr);
    var arr = Belt_Array.concat(seq, [next]);
    if (next === 1) {
      return [
              arr,
              i + 2 | 0
            ];
    }
    _i = i + 1 | 0;
    _seq = arr;
    continue ;
  };
}

function gen_all(limit) {
  var _i = 2;
  var _big = [
    [],
    0,
    0
  ];
  while(true) {
    var big = _big;
    var i = _i;
    if (i === limit) {
      return big;
    }
    var seq = generate_sequence(i);
    var x = big[1];
    console.log(String(x) + " -- " + String(big[2]) + " -- " + String(i));
    var y = seq[1];
    var biggest = y > x ? [
        seq[0],
        y,
        i
      ] : big;
    _big = biggest;
    _i = i + 1 | 0;
    continue ;
  };
}

var biggest = gen_all(1000001);

var generator = biggest[2];

var size = biggest[1];

console.log("==================");

console.log(size);

console.log(generator);

exports.is_even = is_even;
exports.calculate_next = calculate_next;
exports.generate_sequence = generate_sequence;
exports.gen_all = gen_all;
exports.biggest = biggest;
exports.size = size;
exports.generator = generator;
/* biggest Not a pure module */
